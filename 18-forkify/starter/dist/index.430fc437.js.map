{"mappings":"AAAA,EAA4C,AAA5C,0CAA4C;AAE5C,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC1B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACrC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACpB,MAAM,CACF,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QAEnE,CAAC,EAAE,CAAC,GAAG,IAAI;IACf,CAAC;AACL,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAuC,AAAvC,qCAAuC;AAEvC,EAAuB,AAAvB,qBAAuB;AAEvB,KAAK,CAAC,UAAU,oBAAqB,CAAC;IAClC,GAAG,CAAC,CAAC;QACD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CACnB,CAA2E;QAG/E,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAE3B,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO;QAE1D,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI;QAC1B,MAAM,GAAG,CAAC;YACN,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;QACnC,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM;QAElB,EAAqB,AAArB,mBAAqB;QACrB,KAAK,CAAC,MAAM,IAAI,4DAEF,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAChC,MAAM,CAAC,KAAK,CACf,sFAEa,EAAE,MAAM,CAAC,KAAK,CAAC,gVASsC,EACvD,MAAM,CAAC,WAAW,CACrB,sVAOyD,EACtD,MAAM,CAAC,QAAQ,CAClB,gqCAgCD,EAAE,MAAM,CAAC,WAAW,CACf,GAAG,EAAE,GAAG,GAAK,CAAC;YACX,MAAM,EAAE,6RAK0B,EAAE,GAAG,CAAC,QAAQ,CAAC,gIAEd,EAAE,GAAG,CAAC,IAAI,CAAC,wCACtC,EAAE,GAAG,CAAC,WAAW,CAAC,sFAG9B;QACA,CAAC,EACA,IAAI,CAAC,CAAE,GAAE,oSAQkB,EAC5B,MAAM,CAAC,SAAS,CACnB,4KAKK,EAAE,MAAM,CAAC,SAAS,CAAC,mQAQ3B;QACN,eAAe,CAAC,SAAS,GAAG,CAAE;QAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,MAAM;IAC3D,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,KAAK;IACvB,CAAC;AACL,CAAC;AAED,UAAU","sources":["src/js/controller.js"],"sourcesContent":["// import icons from \"url:../img/icons.svg\";\n\nconst recipeContainer = document.querySelector(\".recipe\");\n\nconst timeout = function (s) {\n    return new Promise(function (_, reject) {\n        setTimeout(function () {\n            reject(\n                new Error(`Request took too long! Timeout after ${s} second`)\n            );\n        }, s * 1000);\n    });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\n// console.log(\"TEST\");\n\nconst showRecipe = async function () {\n    try {\n        const res = await fetch(\n            \"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\"\n        );\n\n        const data = await res.json();\n\n        if (!res.ok) throw new Error(`${res.status} ${data.message}`);\n\n        let { recipe } = data.data;\n        recipe = {\n            id: recipe.id,\n            title: recipe.title,\n            publisher: recipe.publisher,\n            sourceUrl: recipe.source_url,\n            image: recipe.image_url,\n            servings: recipe.servings,\n            cookingTime: recipe.cooking_time,\n            ingredients: recipe.ingredients,\n        };\n        console.log(recipe);\n\n        // rendering a recipe\n        const markup = `\n        <figure class=\"recipe__fig\">\n            <img src=\"${recipe.image}\" alt=\"${\n            recipe.title\n        }\" class=\"recipe__img\" />\n            <h1 class=\"recipe__title\">\n                <span>${recipe.title}</span>\n            </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n            <div class=\"recipe__info\">\n                <svg class=\"recipe__info-icon\">\n                    <use href=\"src/img/icons.svg#icon-clock\"></use>\n                </svg>\n                <span class=\"recipe__info-data recipe__info-data--minutes\">${\n                    recipe.cookingTime\n                }</span>\n                <span class=\"recipe__info-text\">minutes</span>\n            </div>\n            <div class=\"recipe__info\">\n                <svg class=\"recipe__info-icon\">\n                    <use href=\"src/img/icons.svg#icon-users\"></use>\n                </svg>\n                <span class=\"recipe__info-data recipe__info-data--people\">${\n                    recipe.servings\n                }</span>\n                <span class=\"recipe__info-text\">servings</span>\n\n                <div class=\"recipe__info-buttons\">\n                    <button class=\"btn--tiny btn--increase-servings\">\n                    <svg>\n                        <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                    </svg>\n                    </button>\n                    <button class=\"btn--tiny btn--increase-servings\">\n                    <svg>\n                        <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                    </svg>\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"recipe__user-generated\">\n                <svg>\n                    <use href=\"src/img/icons.svg#icon-user\"></use>\n                </svg>\n            </div>\n            <button class=\"btn--round\">\n                <svg class=\"\">\n                    <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n                </svg>\n            </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n            <h2 class=\"heading--2\">Recipe ingredients</h2>\n            <ul class=\"recipe__ingredient-list\">\n                ${recipe.ingredients\n                    .map((ing) => {\n                        return `\n                        <li class=\"recipe__ingredient\">\n                            <svg class=\"recipe__icon\">\n                                <use href=\"src/img/icons.svg#icon-check\"></use>\n                            </svg>\n                            <div class=\"recipe__quantity\">${ing.quantity}</div>\n                            <div class=\"recipe__description\">\n                                <span class=\"recipe__unit\">${ing.unit}</span>\n                                ${ing.description}\n                            </div>\n                        </li>\n                    `;\n                    })\n                    .join(\"\")}\n            </ul>\n        </div>\n\n        <div class=\"recipe__directions\">\n            <h2 class=\"heading--2\">How to cook it</h2>\n            <p class=\"recipe__directions-text\">\n                This recipe was carefully designed and tested by\n                <span class=\"recipe__publisher\">${\n                    recipe.publisher\n                }</span>. Please check out\n                directions at their website.\n            </p>\n            <a\n                class=\"btn--small recipe__btn\"\n                href=\"${recipe.sourceUrl}\"\n                target=\"_blank\"\n            >\n                <span>Directions</span>\n                <svg class=\"search__icon\">\n                    <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n            </a>\n        </div>`;\n        recipeContainer.innerHTML = \"\";\n        recipeContainer.insertAdjacentHTML(\"afterbegin\", markup);\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}